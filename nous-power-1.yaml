substitutions:
  esp_name: Nous Power 1 #Device Name
  esp_hostname: nous_power_1
  run_time: 10h #can be as long as needed to get data 
  sleep_time: 5min # normal sleep time
  # Higher value gives lower watt readout
  current_res: "0.00280"
  # Lower value gives lower voltage readout
  voltage_div: "775"
  
esphome:
  name: ${esp_hostname}
  platform: ESP8266
  board: esp8285
  libraries: ciniml/WireGuard-ESP32
  includes: wg-settings-nous-power-1.h
  
wifi:
  networks:
  - ssid: eduroam
    eap:
      username: ms1511@uni-rostock.de
      password: E3afo582!neu
  #use_address: 10.0.50.200

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${esp_hostname}"
    password: !secret password

captive_portal:

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  password: !secret password

ota:
  password: !secret password

time:
  - platform: sntp
    on_time_sync:
        then:
        - lambda: |
            static const char* TAG = "wireguard";
            ESP_LOGD(TAG, "Starting...");
            if( !wg.is_initialized() ) {
                        ESP_LOGD(TAG, "Initializing WG interface...");
                        if( !wg.begin(
                                local_ip,
                                private_key,
                                endpoint_address,
                                public_key,
                                endpoint_port) ) {
                            ESP_LOGD(TAG, "Failed to initialize WG interface.");
                        }
                    }

sun: !include common/sun.yaml 

mqtt: !include common/mqtt.yaml

deep_sleep:
  sleep_duration: ${sleep_time}
  id: deep_sleep_1
  
text_sensor:
  - <<: !include common/text_sensor_sunrise.yaml
  - <<: !include common/text_sensor_sunset.yaml
  - platform: version
    name: "${esp_hostname} - Version"
    icon: mdi:cube-outline

# Enable Web server
web_server:
  port: 80

binary_sensor:
  - platform: status
    name: "${esp_hostname} - Status"
    device_class: connectivity

  # toggle relay on/off
  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: True
    id: "${esp_hostname}_button_state"
    on_press:
      - switch.toggle: button_switch

sensor:
  - <<: !include common/sensor_wifisignal.yaml
  - platform: total_daily_energy
    name: "${esp_hostname} - Todays Usage"
    power_id: "power_wattage"
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:calendar-clock

  - platform: adc
    pin: VCC
    name: "${esp_hostname} - VCC Volt"
    icon: mdi:flash-outline

  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO05
    cf1_pin: GPIO04
    change_mode_every: 4
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    update_interval: 3s

    current:
      name: "${esp_hostname} - Ampere"
      unit_of_measurement: A
      accuracy_decimals: 3
      icon: mdi:current-ac

    voltage:
      name: "${esp_hostname} - Volt"
      unit_of_measurement: V
      accuracy_decimals: 1
      icon: mdi:flash-outline

    power:
      name: "${esp_hostname} - Watt"
      unit_of_measurement: W
      id: "power_wattage"
      icon: mdi:gauge

status_led:
  pin:
    number: GPIO02
    inverted: True
  id: led_blue

output:
  - platform: gpio
    pin: GPIO00
    inverted: true
    id: led_red

switch:
  - platform: template
    name: "${esp_hostname} - Switch"
    icon: mdi:power
    optimistic: true
    id: button_switch
    turn_on_action:
      - switch.turn_on: relay
    turn_off_action:
      - switch.turn_off: relay
  - platform: gpio
    pin: GPIO15
    id: relay