substitutions:
  esp_name: shelly-plug-plus-s #Device Name
  esp_hostname: shelly_plug_plus_s
  run_time: 999h #can be as long as needed to get data 
  sleep_time: 1min # normal sleep time
  max_power: "1500" # 2000
  # Higher value gives lower watt readout
  current_res: "0.001"
  # Lower value gives lower voltage readout
  voltage_div: "1830"

esphome:
  name: ${esp_hostname}

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: arduino

external_components:
  - source: github://pr#4256
    components: [ wireguard ]
wireguard:
  address: 10.0.50.20
  private_key: !secret wireguard_key_esp_test
  peer_key: E3X5676O4u08VaFOvL+H3EGVvbfPVXqoDyrDIahw+CE=
  peer_endpoint: 139.30.255.200
  peer_port: 23456

wifi:
  networks:
  - ssid: eduroam
    #use_address: 10.0.50.20
    eap:
      identity: !secret eduroam_user
      username: !secret eduroam_user
      password: !secret eduroam_password    
      certificate_authority: ca_cert.pem
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  #use_address: 10.11.30.111
  use_address: 10.0.50.20
  
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${esp_hostname}"
    password: !secret password


# Enable logging
logger:

# Enable Home Assistant API
api:
  reboot_timeout: 0s
  encryption:
    key: !secret api_key

ota:
  password: !secret password

captive_portal:

time:
  - platform: sntp

deep_sleep:
  run_duration: ${run_time}
  sleep_duration: ${sleep_time}
  id: deep_sleep_1

mqtt: !include common/mqtt_itmz.yaml

binary_sensor:
  - platform: gpio
    name: "${esp_name} Button"
    pin:
      number: GPIO9
      inverted: yes
      mode:
        input: true
        pullup: true
    on_press:
      then:
        - switch.toggle: "relay"
    filters:
      - delayed_on_off: 5ms

output:
#  - platform: gpio
#    pin: GPIO13
#    id: led_g
#  - platform: gpio
#    pin: GPIO14
#    id: led_r
#  - platform: gpio
#    pin: GPIO16
#    id: led_b
  - platform: gpio
    id: "relay_output"
    pin: GPIO4

#interval:
#  - interval: 1s
#    then:
#      if:
#        condition:
#          wifi.connected:
#        then:
#          - output.turn_on: led_g
#          - output.turn_off: led_r
#        else:
#          - output.turn_on: led_r
#          - output.turn_off: led_g

switch:
  - platform: output
    id: relay
    name: "${esp_name} Relay"
    output: "relay_output"

sensor:
  - platform: hlw8012
    model: BL0937
    sel_pin:
      number: GPIO19
      inverted: true
    cf_pin: GPIO10
    cf1_pin: GPIO22
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    change_mode_every: 1
    update_interval: 5s
    current:
      id: current
      name: "${esp_name} current"
      unit_of_measurement: A
      accuracy_decimals: 3
      internal: false
    voltage:
      id: voltage
      name: "${esp_name} voltage"
      unit_of_measurement: V
      accuracy_decimals: 1
      internal: false
    power:
      name: "${esp_name} power"
      unit_of_measurement: W
      id: power
      icon: mdi:flash-outline
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: relay
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from ${esp_name}
                data_template:
                  message: Switch turned off because power exceeded ${max_power} W

  - platform: total_daily_energy
    name: "${esp_name} daily energy"
    power_id: power
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh

  - platform: ntc
    sensor: temp_resistance_reading
    name: "${esp_name} Temperature"
    unit_of_measurement: "Â°C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: "65.0"
        then:
          - switch.turn_off: "relay"  
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 10kOhm
  - platform: adc
    id: temp_analog_reading
    pin: GPIO33
    attenuation: 11db
    update_interval: 10s