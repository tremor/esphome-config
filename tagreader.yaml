substitutions:
  esp_name: Tagreader #Device Name
  esp_hostname: tagreader
  run_time: 9999d #can be as long as needed to get data 
  sleep_time: 1s # normal sleep time
  
esphome:
  name: ${esp_hostname}
  platform: ESP32
  board: lolin32
  # If buzzer is enabled, notify on api connection success
  on_boot:
    priority: -10
    then:
    - wait_until:
        api.connected:
    - logger.log: API is connected!
    - light.turn_on:
        id: activity_led
        brightness: 100%
        red: 0%
        green: 0%
        blue: 100%
        flash_length: 500ms

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 10.11.30.113

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${esp_hostname}"
    password: !secret password

captive_portal:

bluetooth_proxy:
  active: true
  
# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key
  services:
  - service: rfidreader_tag_ok
    then:

  - service: rfidreader_tag_ko
    then:
ota:
  password: !secret password

time: !include common/time.yaml

sun: !include common/sun.yaml 

#mqtt: !include common/mqtt.yaml

deep_sleep:
  sleep_duration: ${sleep_time}
  id: deep_sleep_1
  
text_sensor:
  - <<: !include common/text_sensor_sunrise.yaml
  - <<: !include common/text_sensor_sunset.yaml
  - <<: !include common/text_wifiinfo.yaml

sensor:
  - <<: !include common/sensor_wifisignal.yaml
  - platform: uptime
    name: "${esp_name} Uptime Sensor"
    id: uptime_sensor
    update_interval: 10s
    
# Define switches to control LED and buzzer from HA
switch:
- platform: template
  name: "${esp_name} Buzzer Enabled"
  id: buzzer_enabled
  icon: mdi:volume-high
  optimistic: true
  restore_state: true
- platform: template
  name: "${esp_name} LED enabled"
  id: led_enabled
  icon: mdi:alarm-light-outline
  optimistic: true
  restore_state: true

binary_sensor:
  - platform: status
    name: "${esp_name} Status"

spi:
  clk_pin: GPIO18
  miso_pin: GPIO19
  mosi_pin: GPIO23

rc522_spi:
  cs_pin: GPIO5
  reset_pin: GPIO0
  update_interval: 500ms
  on_tag:
    then:
    - homeassistant.tag_scanned: !lambda 'return x;'

# Configure LED
light:
- platform: fastled_clockless
  chipset: WS2812
  pin: GPIO27
  default_transition_length: 10ms
  num_leds: 1
  rgb_order: GRB
  id: activity_led
  name: "${friendly_name} LED"
  restore_mode: ALWAYS_OFF