substitutions:
  esp_name: OLED Tester #Device Name
  esp_hostname: oled-test
  run_time: 1min #can be as long as needed to get data 
  sleep_time: 5min # normal sleep time
  away_sleep_time: 1h # sleep time when nobody's at home
  night_sleep_time: 6h # 1st sleep time after midnight
  x_res: '128'
  y_res: '64'

esphome:
  name: ${esp_hostname}
  platform: ESP32
  board: wemos_d1_mini32


# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret password

ota:
  password: !secret password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address:  10.11.30.137

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${esp_hostname}"
    password: !secret password

#font: !include common/fonts.yaml

i2c:
  sda: 21
  scl: 22

sensor:
  - platform: wifi_signal
    name: "WiFi Signal Sensor ${esp_name}"
    update_interval: 60s
    id: wifisignal
  - platform: homeassistant
    entity_id: sensor.blood_sugar_mmol
    id: blood_sugar_mmol
    internal: true
  - platform: homeassistant
    entity_id: sensor.xiaomi_lumi_sen_ill_mgl01_illuminance
    id: wohnzimmer_illumination
    internal: true
  - platform: rotary_encoder
    name: "Rotary Encoder"
    id: rotator
    pin_a: 16
    pin_b: 17
    on_clockwise:
     - logger.log: "Turned Clockwise"
    on_anticlockwise:
     - logger.log: "Turned Anticlockwise"
    
#graph:
#  # Show bare-minimum auto-ranged graph
#  - id: blood_sugar_mmol_graph
#    sensor: blood_sugar_mmol
#    duration: 2h
#    width: ${x_res}
#    height: ${y_res}
#    max_value: 15
#    min_value: 2
#    x_grid: 30min
#    y_grid: 5.0

binary_sensor:
  - platform: gpio
    name: "Enter"
    id: enter
    pin:
      number: 5
      inverted: true
    
#display:
#  - platform: ssd1306_i2c
#    model: "SH1106 128x64"
#    address: 0x3C
#    lambda: |-
#      if (id(blood_sugar_mmol).state < 4) {
#        it.printf(0, 0, id(sans_bold_56),TextAlign::TOP_LEFT, "%.1f", id(blood_sugar_mmol).state);
#      }
#      else {
#        it.printf(0, 0, id(sans_bold_56), TextAlign::TOP_LEFT, "%.1f", id(blood_sugar_mmol).state);
#      }
#      it.printf(${x_res}-2, 0, id(sans_medium_10), TextAlign::TOP_RIGHT, "WiFi: %.0f", id(wifisignal).state);
#      it.printf(${x_res}-2, ${y_res}-2, id(sans_medium_10), TextAlign::BOTTOM_RIGHT, "%.0f lux", id(wohnzimmer_illumination).state);
#      it.graph(0, 0, id(blood_sugar_mmol_graph));