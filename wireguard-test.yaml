substitutions:
  esp_name: Wireguard-test #Device Name
  esp_hostname: wireguard-test
  
esphome:
  name: ${esp_hostname}
  libraries: ciniml/WireGuard-ESP32
  includes: wg-settings.h

esp32:
  board: wemos_d1_mini32
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret password

ota:
  password: !secret password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 10.0.50.20
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${esp_hostname}"
    password: !secret password

mqtt: !include common/mqtt.yaml

sun: !include common/sun.yaml 

deep_sleep:
  id: deep_sleep_1
  
captive_portal:

esp32_ble_tracker:

text_sensor:
  - <<: !include common/text_sensor_sunrise.yaml
  - <<: !include common/text_sensor_sunset.yaml
  - platform: ble_scanner
    name: "BLE Devices Scanner"

binary_sensor:
  # Presence based on MAC address
  - platform: ble_presence
    mac_address: !secret g6_mac
    name: "DexCom MAC at CO2 detected"
    # Presence based on BLE Service UUID
    
ble_client:
  - mac_address: !secret g6_mac
    id: g6_sensor

sensor:
  - platform: ble_client
    ble_client_id: g6_sensor
    name: "G6"
    service_uuid: '180a'
    characteristic_uuid: '2902'
    unit_of_measurement: 'mmol'
    
time:
  - platform: sntp
    on_time_sync:
        then:
        - lambda: |
            static const char* TAG = "wireguard";
            ESP_LOGD(TAG, "Starting...");
            if( !wg.is_initialized() ) {
                        ESP_LOGD(TAG, "Initializing WG interface...");
                        if( !wg.begin(
                                local_ip,
                                private_key,
                                endpoint_address,
                                public_key,
                                endpoint_port) ) {
                            ESP_LOGD(TAG, "Failed to initialize WG interface.");
                        }
                    }